undefined
 - When a variable is declared but not initialized, or when a function does not return a value, the variable or the functionâ€™s result is undefined.
 - Accessing an object property or array element that does not exist also results in undefined.
 - It is a primitive value.


// ================ code ================
let x; // variable declared but not initialized
console.log(x); // Output: undefined

function doSomething() {
// no return statement, so the function returns undefined
}
console.log(doSomething()); // Output: undefined

let obj = {};
console.log(obj.property); // Output: undefined




null
 - It is a deliberate assignment that represents the absence of any object value.
 - It is often used to explicitly indicate that a variable or object property should have no value or no reference to any object.
 - It is also a primitive value.
Example: In the example, we have shown null.

// ================ code ================
let y = null; // variable intentionally set to null
console.log(y); // Output: null

let obj = { property: null }; // property intentionally set to null
console.log(obj.property); // Output: null
